#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ATM2")]
public partial class ATMDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertPerson(Person instance);
  partial void UpdatePerson(Person instance);
  partial void DeletePerson(Person instance);
  partial void InsertTransaction(Transaction instance);
  partial void UpdateTransaction(Transaction instance);
  partial void DeleteTransaction(Transaction instance);
  partial void InsertTransactionType(TransactionType instance);
  partial void UpdateTransactionType(TransactionType instance);
  partial void DeleteTransactionType(TransactionType instance);
  #endregion
	
	public ATMDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ATM2ConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public ATMDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ATMDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ATMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ATMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Person> Persons
	{
		get
		{
			return this.GetTable<Person>();
		}
	}
	
	public System.Data.Linq.Table<Transaction> Transactions
	{
		get
		{
			return this.GetTable<Transaction>();
		}
	}
	
	public System.Data.Linq.Table<TransactionType> TransactionTypes
	{
		get
		{
			return this.GetTable<TransactionType>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PersonId;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _EmailAddress;
	
	private string _Password;
	
	private string _SIN;
	
	private System.DateTime _DateAccountCreated;
	
	private System.DateTime _LastLoginDateTime;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonIdChanging(int value);
    partial void OnPersonIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnSINChanging(string value);
    partial void OnSINChanged();
    partial void OnDateAccountCreatedChanging(System.DateTime value);
    partial void OnDateAccountCreatedChanged();
    partial void OnLastLoginDateTimeChanging(System.DateTime value);
    partial void OnLastLoginDateTimeChanged();
    #endregion
	
	public Person()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PersonId
	{
		get
		{
			return this._PersonId;
		}
		set
		{
			if ((this._PersonId != value))
			{
				this.OnPersonIdChanging(value);
				this.SendPropertyChanging();
				this._PersonId = value;
				this.SendPropertyChanged("PersonId");
				this.OnPersonIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string EmailAddress
	{
		get
		{
			return this._EmailAddress;
		}
		set
		{
			if ((this._EmailAddress != value))
			{
				this.OnEmailAddressChanging(value);
				this.SendPropertyChanging();
				this._EmailAddress = value;
				this.SendPropertyChanged("EmailAddress");
				this.OnEmailAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIN", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
	public string SIN
	{
		get
		{
			return this._SIN;
		}
		set
		{
			if ((this._SIN != value))
			{
				this.OnSINChanging(value);
				this.SendPropertyChanging();
				this._SIN = value;
				this.SendPropertyChanged("SIN");
				this.OnSINChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAccountCreated", DbType="DateTime NOT NULL")]
	public System.DateTime DateAccountCreated
	{
		get
		{
			return this._DateAccountCreated;
		}
		set
		{
			if ((this._DateAccountCreated != value))
			{
				this.OnDateAccountCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateAccountCreated = value;
				this.SendPropertyChanged("DateAccountCreated");
				this.OnDateAccountCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDateTime", DbType="DateTime NOT NULL")]
	public System.DateTime LastLoginDateTime
	{
		get
		{
			return this._LastLoginDateTime;
		}
		set
		{
			if ((this._LastLoginDateTime != value))
			{
				this.OnLastLoginDateTimeChanging(value);
				this.SendPropertyChanging();
				this._LastLoginDateTime = value;
				this.SendPropertyChanged("LastLoginDateTime");
				this.OnLastLoginDateTimeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Transaction]")]
public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TransactionId;
	
	private int _PersonId;
	
	private int _TransactionTypeId;
	
	private decimal _AmountTransferred;
	
	private System.DateTime _DateOfTransaction;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIdChanging(int value);
    partial void OnTransactionIdChanged();
    partial void OnPersonIdChanging(int value);
    partial void OnPersonIdChanged();
    partial void OnTransactionTypeIdChanging(int value);
    partial void OnTransactionTypeIdChanged();
    partial void OnAmountTransferredChanging(decimal value);
    partial void OnAmountTransferredChanged();
    partial void OnDateOfTransactionChanging(System.DateTime value);
    partial void OnDateOfTransactionChanged();
    #endregion
	
	public Transaction()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int TransactionId
	{
		get
		{
			return this._TransactionId;
		}
		set
		{
			if ((this._TransactionId != value))
			{
				this.OnTransactionIdChanging(value);
				this.SendPropertyChanging();
				this._TransactionId = value;
				this.SendPropertyChanged("TransactionId");
				this.OnTransactionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="Int NOT NULL")]
	public int PersonId
	{
		get
		{
			return this._PersonId;
		}
		set
		{
			if ((this._PersonId != value))
			{
				this.OnPersonIdChanging(value);
				this.SendPropertyChanging();
				this._PersonId = value;
				this.SendPropertyChanged("PersonId");
				this.OnPersonIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeId", DbType="Int NOT NULL")]
	public int TransactionTypeId
	{
		get
		{
			return this._TransactionTypeId;
		}
		set
		{
			if ((this._TransactionTypeId != value))
			{
				this.OnTransactionTypeIdChanging(value);
				this.SendPropertyChanging();
				this._TransactionTypeId = value;
				this.SendPropertyChanged("TransactionTypeId");
				this.OnTransactionTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountTransferred", DbType="Decimal(18,2) NOT NULL")]
	public decimal AmountTransferred
	{
		get
		{
			return this._AmountTransferred;
		}
		set
		{
			if ((this._AmountTransferred != value))
			{
				this.OnAmountTransferredChanging(value);
				this.SendPropertyChanging();
				this._AmountTransferred = value;
				this.SendPropertyChanged("AmountTransferred");
				this.OnAmountTransferredChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfTransaction", DbType="DateTime NOT NULL")]
	public System.DateTime DateOfTransaction
	{
		get
		{
			return this._DateOfTransaction;
		}
		set
		{
			if ((this._DateOfTransaction != value))
			{
				this.OnDateOfTransactionChanging(value);
				this.SendPropertyChanging();
				this._DateOfTransaction = value;
				this.SendPropertyChanged("DateOfTransaction");
				this.OnDateOfTransactionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionType")]
public partial class TransactionType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TransactionTypeId;
	
	private string _TransactionType1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionTypeIdChanging(int value);
    partial void OnTransactionTypeIdChanged();
    partial void OnTransactionType1Changing(string value);
    partial void OnTransactionType1Changed();
    #endregion
	
	public TransactionType()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int TransactionTypeId
	{
		get
		{
			return this._TransactionTypeId;
		}
		set
		{
			if ((this._TransactionTypeId != value))
			{
				this.OnTransactionTypeIdChanging(value);
				this.SendPropertyChanging();
				this._TransactionTypeId = value;
				this.SendPropertyChanged("TransactionTypeId");
				this.OnTransactionTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TransactionType", Storage="_TransactionType1", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string TransactionType1
	{
		get
		{
			return this._TransactionType1;
		}
		set
		{
			if ((this._TransactionType1 != value))
			{
				this.OnTransactionType1Changing(value);
				this.SendPropertyChanging();
				this._TransactionType1 = value;
				this.SendPropertyChanged("TransactionType1");
				this.OnTransactionType1Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
